{"version":3,"sources":["components/MetamaskInfo.js","helpers.js","components/Toast.js","components/Swap.js","components/AddLiquidity.js","components/RemoveLiquidity.js","components/FarmWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["MetamaskInfo","theme","createTheme","typography","htmlFontSize","Card","sx","minWidth","bgcolor","CardContent","Typography","variant","ERC20ABI","require","AstrumFarmABI","getUSDCBalance","a","usdcContract","getUSDCContract","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","getAddress","userAddress","balanceOf","usdcBalance","getETHBalance","getBalance","balance","getFarmContract","Contract","onSuccess","toastMessage","state","setState","isToastOpen","toastSeverity","onError","Alert","React","props","ref","elevation","Toast","alertSeverity","alertMessage","open","setOpen","anchorOrigin","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","width","Swap","usdcAmount","setUSDCAmount","useState","swapUSDCAmount","swapToUSDC","amount","Number","farmContract","getAmountsInETHToUSDC","amountsIn","deadline","Date","now","swapETHForExactTokens","value","tx","wait","status","Stack","spacing","direction","style","lineHeight","TextField","id","label","type","onChange","newAmount","target","Button","onClick","isOpen","vertical","horizontal","AddLiquidity","ethAmount","ethToUSDCRatio","updateETHAndUSDC","formatEther","eth","utils","usdcToAdd","ethToAdd","hasApproved","useEffect","farm","usdc","allowance","address","fetchHasApproved","approve","constants","MaxInt256","addLiquidity","usdcOut","allowedSlippage","getBlockNumber","bNum","getBlock","block","addLiquidityETH","Math","round","timestamp","disabled","RemoveLiquidity","balanceLP","amountLPToRemove","updateBalanceLP","balances","removeLiquidity","toRemove","removeLiquidityETH","FarmWrapper","tab","ethBalance","fetchUSDCData","fetchETHData","fetchRatioData","newBalance","Box","TabContext","borderBottom","borderColor","TabList","newValue","centered","Tab","TabPanel","App","isMetaMaskDetected","checkMetamask","enable","getNetwork","network","chainId","className","Grid","container","alignItems","justifyContent","minHeight","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.829b1832.chunk.js","sourcesContent":["import Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport { createTheme } from \"@mui/material/styles\"\n\nexport const MetamaskInfo = () => {\n  const theme = createTheme({\n    typography: {\n      htmlFontSize: 10,\n    },\n  })\n  return (\n    <Card\n      sx={{\n        minWidth: 275,\n        bgcolor: \"#80d8ff\",\n      }}\n    >\n      <CardContent>\n        <Typography variant=\"body2\" theme={theme}>\n          You must connect to the site with Metamask on the Rinkeby network.\n          <br />\n          If you switch networks then refresh the website with Rinkeby selected.\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import { ethers } from \"ethers\"\nconst ERC20ABI = require(\"./abi/ERC20.json\")\nconst AstrumFarmABI = require(\"./abi/AstrumFarm.json\")\n\nexport const getUSDCBalance = async () => {\n  const usdcContract = getUSDCContract()\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n  const userAddress = await signer.getAddress()\n  let usdcBalance = await usdcContract.balanceOf(userAddress)\n  return usdcBalance\n}\n\nexport const getETHBalance = async () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n  const userAddress = await signer.getAddress()\n  const balance = await provider.getBalance(userAddress)\n  return balance\n}\n\nexport const getFarmContract = () => {\n  const farmAddress = \"0x2dD44Ad3A8fa197183CA578E87A2B89A41507F1D\"\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n  const farmContract = new ethers.Contract(farmAddress, AstrumFarmABI, signer)\n  return farmContract\n}\n\nexport const getUSDCContract = () => {\n  const tokenAddress = \"0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b\"\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n  const tokenContract = new ethers.Contract(tokenAddress, ERC20ABI, signer)\n  return tokenContract\n}\n\nexport const onSuccess = (toastMessage, state, setState) => {\n  setState({\n    ...state,\n    isToastOpen: true,\n    toastSeverity: \"success\",\n    toastMessage,\n  })\n}\n\nexport const onError = (toastMessage, state, setState) => {\n  setState({\n    ...state,\n    isToastOpen: true,\n    toastSeverity: \"error\",\n    toastMessage,\n  })\n}\n","import * as React from \"react\"\nimport Snackbar from \"@mui/material/Snackbar\"\nimport MuiAlert from \"@mui/material/Alert\"\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\n})\n\nexport default function Toast({\n  alertSeverity = \"success\",\n  alertMessage = \"\",\n  open,\n  setOpen,\n  anchorOrigin,\n}) {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={anchorOrigin}\n      >\n        <Alert onClose={handleClose} severity={alertSeverity} sx={{ width: \"100%\" }}>\n          {alertMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport TextField from \"@mui/material/TextField\"\nimport Button from \"@mui/material/Button\"\nimport Stack from \"@mui/material/Stack\"\nimport { getFarmContract, onSuccess, onError } from \"../helpers\"\nimport Toast from \"./Toast\"\n\nexport default function Swap({ usdcAmount, setUSDCAmount }) {\n  const [state, setState] = useState({\n    swapUSDCAmount: 0,\n    isToastOpen: false,\n    toastSeverity: \"success\",\n    toastMessage: \"Swapped successfully!\",\n  })\n\n  const setToastOpen = (isOpen) => {\n    if (isOpen !== state.isToastOpen) {\n      setState({ ...state, isToastOpen: isOpen })\n    }\n  }\n\n  const amountChanged = (event) => {\n    const newAmount = event.target.value\n    if (newAmount !== state.swapUSDCAmount && newAmount >= 0) {\n      setState({ ...state, swapUSDCAmount: newAmount })\n    }\n  }\n\n  const swapToUSDC = async () => {\n    try {\n      const amount = Number(state.swapUSDCAmount)\n      const farmContract = getFarmContract()\n      const amountsIn = await farmContract.getAmountsInETHToUSDC(amount)\n      const oneMinute = 60 * 1000\n      const deadline = Date.now() + oneMinute\n      const tx = await farmContract.swapETHForExactTokens(amount, deadline, {\n        value: amountsIn[0],\n      })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        setUSDCAmount()\n        onSuccess(\"Swapped successfully!\", state, setState)\n      }\n    } catch (error) {\n      onError(\"Something went wrong, try swapping a different amount!\", state, setState)\n    }\n  }\n  return (\n    <div>\n      <Stack spacing={2} direction=\"row\">\n        <div style={{ lineHeight: 3.2 }}>USDC in wallet: {usdcAmount}</div>\n      </Stack>\n      <Stack spacing={2} direction=\"row\">\n        <div style={{ lineHeight: 3.2 }}>USDC amount to swap to:</div>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"USDC\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={state.swapUSDCAmount}\n          onChange={amountChanged}\n        />\n        <Button variant=\"outlined\" onClick={swapToUSDC}>\n          Swap\n        </Button>\n      </Stack>\n      <Toast\n        alertSeverity={state.toastSeverity}\n        alertMessage={state.toastMessage}\n        open={state.isToastOpen}\n        setOpen={setToastOpen}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport TextField from \"@mui/material/TextField\"\nimport Button from \"@mui/material/Button\"\nimport Stack from \"@mui/material/Stack\"\nimport { ethers } from \"ethers\"\nimport { getUSDCContract, getFarmContract, onSuccess, onError } from \"../helpers\"\nimport Toast from \"./Toast\"\n\nexport default function AddLiquidity({\n  usdcAmount,\n  ethAmount,\n  ethToUSDCRatio,\n  updateETHAndUSDC,\n}) {\n  const formatEther = (eth) => ethers.utils.formatEther(eth)\n\n  const [state, setState] = useState({\n    usdcToAdd: 1,\n    ethToAdd: formatEther(ethToUSDCRatio),\n    hasApproved: null,\n    isToastOpen: false,\n    toastSeverity: \"success\",\n    toastMessage: \"Swapped successfully!\",\n  })\n\n  useEffect(() => {\n    if (state.hasApproved == null) {\n      async function fetchHasApproved() {\n        const farm = getFarmContract()\n        const usdc = getUSDCContract()\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const signer = provider.getSigner()\n        const userAddress = await signer.getAddress()\n        const allowance = await usdc.allowance(userAddress, farm.address)\n        const hasApproved = Number(allowance) !== 0\n        setState({ ...state, hasApproved })\n      }\n      fetchHasApproved()\n    }\n  })\n\n  const setToastOpen = (isOpen) => {\n    if (isOpen !== state.isToastOpen) {\n      setState({ ...state, isToastOpen: isOpen })\n    }\n  }\n\n  const amountChanged = (event) => {\n    const newAmount = event.target.value\n    if (newAmount !== state.usdcToAdd && newAmount <= usdcAmount && newAmount >= 0) {\n      const eth = newAmount * ethToUSDCRatio\n      setState({ ...state, usdcToAdd: Number(newAmount), ethToAdd: formatEther(eth) })\n    }\n  }\n\n  const approve = async () => {\n    try {\n      const farm = getFarmContract()\n      const usdc = getUSDCContract()\n      const tx = await usdc.approve(farm.address, ethers.constants.MaxInt256)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        setState({ ...state, hasApproved: true })\n        onSuccess(\"Approve successful!\", state, setState)\n      }\n    } catch (error) {\n      onError(\"Approve failed!\", state, setState)\n    }\n  }\n\n  const addLiquidity = async () => {\n    try {\n      const usdcOut = state.usdcToAdd\n      const allowedSlippage = 0.95\n      const farm = getFarmContract()\n      const amountsIn = await farm.getAmountsInETHToUSDC(usdcOut)\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const bNum = await provider.getBlockNumber()\n      const block = await provider.getBlock(bNum)\n      const tx = await farm.addLiquidityETH(\n        usdcOut,\n        Math.round(usdcOut * allowedSlippage),\n        1,\n        block.timestamp + 50,\n        {\n          value: amountsIn[0],\n        }\n      )\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        updateETHAndUSDC()\n        onSuccess(\"Add liquidity succeeded!\", state, setState)\n      }\n    } catch (error) {\n      onError(\"Add liquidity failed! Try a different amount.\", state, setState)\n    }\n  }\n\n  return (\n    <div>\n      <Stack spacing={2} direction=\"row\">\n        <div style={{ lineHeight: 3.2 }}>USDC in wallet: {usdcAmount}</div>\n        <div style={{ lineHeight: 3.2 }}>ETH in wallet: {formatEther(ethAmount)}</div>\n      </Stack>\n      <Stack spacing={2} direction=\"row\">\n        <div style={{ lineHeight: 3.2 }}>USDC amount:</div>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"USDC\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={state.usdcToAdd}\n          onChange={amountChanged}\n        />\n        <div style={{ lineHeight: 3.2 }}>ETH amount:</div>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"ETH\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={state.ethToAdd}\n          disabled={true}\n        />\n        <Button variant=\"outlined\" onClick={approve} disabled={state.hasApproved}>\n          Approve\n        </Button>\n        <Button variant=\"outlined\" onClick={addLiquidity} disabled={!state.hasApproved}>\n          Add liquidity\n        </Button>\n      </Stack>\n      <Toast\n        alertSeverity={state.toastSeverity}\n        alertMessage={state.toastMessage}\n        open={state.isToastOpen}\n        setOpen={setToastOpen}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport TextField from \"@mui/material/TextField\"\nimport Button from \"@mui/material/Button\"\nimport Stack from \"@mui/material/Stack\"\nimport { ethers } from \"ethers\"\nimport { getFarmContract, onSuccess, onError } from \"../helpers\"\nimport Toast from \"./Toast\"\n\nexport default function RemoveLiquidity({ usdcAmount, ethAmount, updateETHAndUSDC }) {\n  const [state, setState] = useState({\n    balanceLP: null,\n    amountLPToRemove: 0,\n    isToastOpen: false,\n    toastSeverity: \"success\",\n    toastMessage: \"Swapped successfully!\",\n  })\n\n  const setToastOpen = (isOpen) => {\n    if (isOpen !== state.isToastOpen) {\n      setState({ ...state, isToastOpen: isOpen })\n    }\n  }\n\n  const updateBalanceLP = async () => {\n    const farm = getFarmContract()\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const userAddress = await signer.getAddress()\n    const balanceLP = Number(await farm.balances(userAddress))\n    setState({ ...state, balanceLP })\n  }\n\n  useEffect(() => {\n    if (state.balanceLP == null) {\n      updateBalanceLP()\n    }\n  })\n\n  const amountChanged = (event) => {\n    const newAmount = event.target.value\n    const toRemove = state.amountLPToRemove\n    if (newAmount !== toRemove && newAmount <= state.balanceLP && newAmount >= 0) {\n      setState({ ...state, amountLPToRemove: newAmount })\n    }\n  }\n\n  const removeLiquidity = async () => {\n    try {\n      const toRemove = state.amountLPToRemove\n      const oneMinute = 60 * 1000\n      const deadline = Date.now() + oneMinute\n      const farm = getFarmContract()\n      const tx = await farm.removeLiquidityETH(toRemove, 0, 0, deadline)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        updateETHAndUSDC()\n        updateBalanceLP()\n        onSuccess(\"Remove liquidity succeeded!\", state, setState)\n      }\n    } catch (error) {\n      onError(\"Remove liquidity failed! Try a different amount.\", state, setState)\n    }\n  }\n\n  const formatEther = (eth) => ethers.utils.formatEther(eth)\n\n  return (\n    <div>\n      <Stack spacing={2} direction=\"row\">\n        <div style={{ lineHeight: 3.2 }}>USDC in wallet: {usdcAmount}</div>\n        <div style={{ lineHeight: 3.2 }}>ETH in wallet: {formatEther(ethAmount)}</div>\n        <div style={{ lineHeight: 3.2 }}>Amount of LP: {state.balanceLP}</div>\n      </Stack>\n      <Stack spacing={2} direction=\"row\">\n        <div style={{ lineHeight: 3.2 }}>Amount of LP to remove:</div>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"LP to remove\"\n          variant=\"outlined\"\n          type=\"number\"\n          value={state.amountLPToRemove}\n          onChange={amountChanged}\n        />\n        <Button\n          variant=\"outlined\"\n          onClick={removeLiquidity}\n          disabled={state.balanceLP === 0}\n        >\n          Remove liquidity\n        </Button>\n      </Stack>\n      <Toast\n        alertSeverity={state.toastSeverity}\n        alertMessage={state.toastMessage}\n        open={state.isToastOpen}\n        setOpen={setToastOpen}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport Box from \"@mui/material/Box\"\nimport Tab from \"@mui/material/Tab\"\nimport TabContext from \"@mui/lab/TabContext\"\nimport TabList from \"@mui/lab/TabList\"\nimport TabPanel from \"@mui/lab/TabPanel\"\nimport Swap from \"./Swap\"\nimport AddLiquidity from \"./AddLiquidity\"\nimport RemoveLiquidity from \"./RemoveLiquidity\"\nimport { getUSDCBalance, getETHBalance } from \"../helpers\"\nimport { ethers } from \"ethers\"\nimport { getFarmContract } from \"../helpers\"\n\nexport default function FarmWrapper() {\n  const [state, setState] = useState({\n    tab: \"1\",\n    usdcAmount: null,\n    ethAmount: null,\n    ethToUSDCRatio: null,\n  })\n\n  const handleChange = (event, newValue) => {\n    setState({ ...state, tab: newValue })\n  }\n\n  const updateETHAndUSDC = async () => {\n    const usdcBalance = await getUSDCBalance()\n    const ethBalance = await getETHBalance()\n    setState({\n      ...state,\n      usdcAmount: Number(usdcBalance),\n      ethAmount: ethBalance,\n    })\n  }\n\n  useEffect(() => {\n    if (state.usdcAmount == null) {\n      async function fetchUSDCData() {\n        const balance = await getUSDCBalance()\n        setState({ ...state, usdcAmount: Number(balance) })\n      }\n      fetchUSDCData()\n    }\n    if (state.ethAmount == null) {\n      async function fetchETHData() {\n        const balance = await getETHBalance()\n        const formattedBalance = ethers.utils.formatEther(balance)\n        setState({ ...state, ethAmount: balance })\n      }\n      fetchETHData()\n    }\n    if (state.ethToUSDCRatio == null) {\n      async function fetchRatioData() {\n        const usdcAmount = 1\n        const farmContract = getFarmContract()\n        const amountsIn = await farmContract.getAmountsInETHToUSDC(usdcAmount)\n        setState({ ...state, ethToUSDCRatio: Number(amountsIn[0]) })\n      }\n      fetchRatioData()\n    }\n  })\n\n  const setUSDCAmount = async () => {\n    const newBalance = await getUSDCBalance()\n    setState({ ...state, usdcAmount: Number(newBalance) })\n  }\n\n  return (\n    <Box\n      sx={{\n        typography: \"body1\",\n        bgcolor: \"#80d8ff\",\n      }}\n    >\n      <TabContext value={state.tab}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList onChange={handleChange} centered>\n            <Tab label=\"Swap\" value=\"1\" />\n            <Tab label=\"Add liquidity\" value=\"2\" />\n            <Tab label=\"Remove liquidity\" value=\"3\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"1\">\n          <Swap usdcAmount={state.usdcAmount} setUSDCAmount={setUSDCAmount} />\n        </TabPanel>\n        <TabPanel value=\"2\">\n          <AddLiquidity\n            usdcAmount={state.usdcAmount}\n            ethAmount={state.ethAmount}\n            setUSDCAmount={setUSDCAmount}\n            ethToUSDCRatio={state.ethToUSDCRatio}\n            updateETHAndUSDC={updateETHAndUSDC}\n          />\n        </TabPanel>\n        <TabPanel value=\"3\">\n          <RemoveLiquidity\n            usdcAmount={state.usdcAmount}\n            ethAmount={state.ethAmount}\n            updateETHAndUSDC={updateETHAndUSDC}\n          />\n        </TabPanel>\n      </TabContext>\n    </Box>\n  )\n}\n","import \"./App.css\"\nimport React, { useEffect, useState } from \"react\"\nimport { ethers } from \"ethers\"\nimport { MetamaskInfo } from \"./components/MetamaskInfo\"\nimport FarmWrapper from \"./components/FarmWrapper\"\nimport Grid from \"@mui/material/Grid\"\n\nconst RINKEBY_ID = 4\n\nfunction App() {\n  const [state, setState] = useState({\n    isMetaMaskDetected: false,\n  })\n\n  useEffect(() => {\n    checkMetamask()\n  })\n\n  const checkMetamask = async () => {\n    if (!state.isMetaMaskDetected) {\n      try {\n        await window.ethereum.enable()\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const signer = provider.getSigner()\n        const network = await provider.getNetwork()\n        if (signer && network && network.chainId === RINKEBY_ID) {\n          setState({ ...state, isMetaMaskDetected: true })\n        }\n      } catch (error) {}\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <Grid item xs={3}>\n          {!state.isMetaMaskDetected ? <MetamaskInfo /> : <FarmWrapper />}\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}